name: Auto Tag and Release on Version Change

on:
  push:
    branches:
      - main
    paths:
      - "gradle.properties"  # Trigger only if this file changes

permissions:
  contents: write  # Allows GitHub Actions to push tags and create releases

jobs:
  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for version comparison

      - name: Extract previous versions
        id: old_versions
        run: |
          if git show HEAD~1:gradle.properties >/dev/null 2>&1; then
            OLD_MAIN_VERSION=$(git show HEAD~1:gradle.properties | grep -oP '(?<=mainVersion=)[0-9]+\.[0-9]+\.[0-9]+')
            OLD_SDK_VERSION=$(git show HEAD~1:gradle.properties | grep -oP '(?<=sdkVersion=)[0-9]+\.[0-9]+\.[0-9]+')
          else
            OLD_MAIN_VERSION=""
            OLD_SDK_VERSION=""
          fi

          echo "OLD_MAIN_VERSION=$OLD_MAIN_VERSION" >> $GITHUB_ENV
          echo "OLD_SDK_VERSION=$OLD_SDK_VERSION" >> $GITHUB_ENV

      - name: Extract current versions
        id: new_versions
        run: |
          MAIN_VERSION=$(grep -oP '(?<=mainVersion=)[0-9]+\.[0-9]+\.[0-9]+' gradle.properties)
          SDK_VERSION=$(grep -oP '(?<=sdkVersion=)[0-9]+\.[0-9]+\.[0-9]+' gradle.properties)

          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV
          echo "SDK_VERSION=$SDK_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare
        run: |
          if [ "$OLD_MAIN_VERSION" != "$MAIN_VERSION" ]; then
            echo "MAIN_CHANGED=true" >> $GITHUB_ENV
          fi

          if [ "$OLD_SDK_VERSION" != "$SDK_VERSION" ]; then
            echo "SDK_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Generate Changelog
        id: generate_changelog
        run: |
          echo "## Changelog" > changelog.md
          echo "" >> changelog.md

          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo '')
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:'- %h %s' --reverse)
          else
            CHANGELOG=$(git log ${LAST_TAG}..HEAD --pretty=format:'- %h %s' --reverse)
          fi

          echo "$CHANGELOG" >> changelog.md
          cat changelog.md

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Check if tags already exist
        run: |
          if git rev-parse "main-v${MAIN_VERSION}" >/dev/null 2>&1; then
            echo "Main version tag already exists. Skipping..."
            echo "MAIN_CHANGED=false" >> $GITHUB_ENV
          fi

          if git rev-parse "sdk-v${SDK_VERSION}" >/dev/null 2>&1; then
            echo "SDK version tag already exists. Skipping..."
            echo "SDK_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Create Git Tags
        if: env.MAIN_CHANGED == 'true' || env.SDK_CHANGED == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if [ "$MAIN_CHANGED" == "true" ]; then
            git tag "main-v${MAIN_VERSION}"
            git push origin "main-v${MAIN_VERSION}"
            echo "✅ Tagged main: main-v${MAIN_VERSION}"
          fi

          if [ "$SDK_CHANGED" == "true" ]; then
            git tag "sdk-v${SDK_VERSION}"
            git push origin "sdk-v${SDK_VERSION}"
            echo "✅ Tagged sdkRelease: sdk-v${SDK_VERSION}"
          fi

      - name: Create GitHub Release for main
        uses: softprops/action-gh-release@v1
        if: env.MAIN_CHANGED == 'true'
        with:
          tag_name: "main-v${{ env.MAIN_VERSION }}"
          name: "Main Release ${{ env.MAIN_VERSION }}"
          body: |
            ## Changes in this release:
            ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release for sdkRelease
        uses: softprops/action-gh-release@v1
        if: env.SDK_CHANGED == 'true'
        with:
          tag_name: "sdk-v${{ env.SDK_VERSION }}"
          name: "SDK Release ${{ env.SDK_VERSION }}"
          body: |
            ## Changes in this release:
            ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
