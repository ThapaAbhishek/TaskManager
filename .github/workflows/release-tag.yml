name: Auto Tag and Release on Version Change

on:
  push:
    branches:
      - main
    paths:
      - "gradle.properties"

permissions:
  contents: write

jobs:
  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch history for version comparison

      - name: Extract previous versions
        id: old_versions
        run: |
          OLD_MAIN_VERSION=$(git show HEAD~1:gradle.properties 2>/dev/null | grep -oP '(?<=mainVersion=)[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          OLD_SDK_VERSION=$(git show HEAD~1:gradle.properties 2>/dev/null | grep -oP '(?<=sdkVersion=)[0-9]+\.[0-9]+\.[0-9]+' || echo "")

          echo "OLD_MAIN_VERSION=$OLD_MAIN_VERSION" >> $GITHUB_ENV
          echo "OLD_SDK_VERSION=$OLD_SDK_VERSION" >> $GITHUB_ENV

      - name: Extract current versions
        id: new_versions
        run: |
          MAIN_VERSION=$(grep -oP '(?<=mainVersion=)[0-9]+\.[0-9]+\.[0-9]+' gradle.properties)
          SDK_VERSION=$(grep -oP '(?<=sdkVersion=)[0-9]+\.[0-9]+\.[0-9]+' gradle.properties)

          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV
          echo "SDK_VERSION=$SDK_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare
        run: |
          if [ "$OLD_MAIN_VERSION" != "$MAIN_VERSION" ]; then
            echo "MAIN_CHANGED=true" >> $GITHUB_ENV
          fi

          if [ "$OLD_SDK_VERSION" != "$SDK_VERSION" ]; then
            echo "SDK_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Create and Push Git Tags
        if: env.MAIN_CHANGED == 'true' || env.SDK_CHANGED == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if [ "$MAIN_CHANGED" == "true" ]; then
            git tag "main-v${MAIN_VERSION}"
            git push origin "main-v${MAIN_VERSION}"
          fi
          if [ "$SDK_CHANGED" == "true" ]; then
            git tag "sdk-v${SDK_VERSION}"
            git push origin "sdk-v${SDK_VERSION}"
          fi

      # 🗜️ Create ZIP for Main Folder
      - name: Create ZIP for Main
        if: env.MAIN_CHANGED == 'true'
        run: |
          zip -r main-${MAIN_VERSION}.zip main/
          echo "MAIN_ZIP=main-${MAIN_VERSION}.zip" >> $GITHUB_ENV

      # 🗜️ Create ZIP for SDK Release Folder
      - name: Create ZIP for SDK
        if: env.SDK_CHANGED == 'true'
        run: |
          zip -r sdk-${SDK_VERSION}.zip sdkRelease/
          echo "SDK_ZIP=sdk-${SDK_VERSION}.zip" >> $GITHUB_ENV

      - name: Create GitHub Release for Main
        uses: softprops/action-gh-release@v1
        if: env.MAIN_CHANGED == 'true'
        with:
          tag_name: "main-v${{ env.MAIN_VERSION }}"
          name: "Main Release ${{ env.MAIN_VERSION }}"
          body: |
            ## Changes in this release:
            ${{ env.CHANGELOG }}
          files: ${{ env.MAIN_ZIP }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release for SDK
        uses: softprops/action-gh-release@v1
        if: env.SDK_CHANGED == 'true'
        with:
          tag_name: "sdk-v${{ env.SDK_VERSION }}"
          name: "SDK Release ${{ env.SDK_VERSION }}"
          body: |
            ## Changes in this release:
            ${{ env.CHANGELOG }}
          files: ${{ env.SDK_ZIP }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
