name: Auto Tag and Release on Version Change

on:
  push:
    branches:
      - main
    paths:
      - "gradle.properties"

permissions:
  contents: write

jobs:
  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch history for version comparison

      - name: Extract previous sdkVersion
        id: old_versions
        run: |
          OLD_SDK_VERSION=$(git show HEAD~1:gradle.properties 2>/dev/null | grep -oP '(?<=version=)[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          echo "OLD_SDK_VERSION=$OLD_SDK_VERSION" >> $GITHUB_ENV

      - name: Extract current sdkVersion
        id: new_versions
        run: |
          SDK_VERSION=$(grep -oP '(?<=version=)[0-9]+\.[0-9]+\.[0-9]+' gradle.properties)
          echo "SDK_VERSION=$SDK_VERSION" >> $GITHUB_ENV

      - name: Compare sdkVersions
        id: compare
        run: |
          if [ "$OLD_SDK_VERSION" != "$SDK_VERSION" ]; then
            echo "SDK_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Generate Changelog
        id: generate_changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo '')
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:'- %h %s' --reverse)
          else
            CHANGELOG=$(git log ${LAST_TAG}..HEAD --pretty=format:'- %h %s' --reverse)
          fi

          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Check if sdkVersion tag already exists
        run: |
          if git rev-parse "sdk-v${SDK_VERSION}" >/dev/null 2>&1; then
            echo "SDK_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Create and Push Git Tag for SDK
        if: env.SDK_CHANGED == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag "sdk-v${SDK_VERSION}"
          git push origin "sdk-v${SDK_VERSION}"

      - name: Create ZIP for SDK Release Folder
        if: env.SDK_CHANGED == 'true'
        run: |
          zip -r sdk-${SDK_VERSION}.zip sdk/
          echo "SDK_ZIP=sdk-${SDK_VERSION}.zip" >> $GITHUB_ENV

      - name: Create GitHub Release for SDK
        uses: softprops/action-gh-release@v1
        if: env.SDK_CHANGED == 'true'
        with:
          tag_name: "sdk-v${{ env.SDK_VERSION }}"
          name: "SDK Release ${{ env.SDK_VERSION }}"
          body: |
            ## Changes in this release:
            ${{ env.CHANGELOG }}
          files: ${{ env.SDK_ZIP }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
